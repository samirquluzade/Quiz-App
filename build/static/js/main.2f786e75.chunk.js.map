{"version":3,"sources":["components/QuestionArea.js","App.js","index.js"],"names":["QuestionArea","showAnswers","handleAnswer","handleNextQuestion","data","className","dangerouslySetInnerHTML","__html","question","answers","map","answer","bgColor","correct_answer","textColor","onClick","App","useState","questions","setQuestions","curIndex","setCurIndex","score","setScore","setShowAnswers","start","setStart","timer","setTimer","refreshPage","window","location","reload","Completionist","renderer","hours","minutes","seconds","completed","useEffect","fetch","then","res","json","results","incorrect_answers","sort","Math","random","date","Date","now","length","Fragment","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f786e75.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst QuestionArea = ({\r\n  showAnswers,\r\n  handleAnswer,\r\n  handleNextQuestion,\r\n  data,\r\n}) => {\r\n  return (\r\n    <div className=\"flex flex-col\">\r\n      <div className=\"bg-white text-purple-800 p-10 rounded-lg shadow-md\">\r\n        <h2\r\n          className=\"text-2xl\"\r\n          dangerouslySetInnerHTML={{ __html: data.question }}\r\n        />\r\n      </div>\r\n      <div className=\"grid grid-cols-2 gap-6 mt-6\">\r\n        {data.answers.map(answer => {\r\n          const bgColor = showAnswers\r\n            ? answer === data.correct_answer\r\n              ? \"bg-green-500\"\r\n              : \"bg-red-500\"\r\n            : \"bg-white\";\r\n          const textColor = showAnswers ? \"text-white\" : \"text-purple-800\";\r\n          return (\r\n            <button\r\n              className={`${bgColor} ${textColor} p-4 font-semibold rounded shadow`}\r\n              onClick={() => handleAnswer(answer)}\r\n              dangerouslySetInnerHTML={{ __html: answer }}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      {showAnswers && (\r\n        <button\r\n          onClick={handleNextQuestion}\r\n          className={`mt-6 ml-auto bg-pink-700 text-white p-4 font-semibold rounded shadow`}\r\n        >\r\n          Next Question\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionArea;\r\n","import React, { useEffect, useState } from \"react\";\nimport Countdown from \"react-countdown\";\nimport QuestionArea from \"./components/QuestionArea\";\nconst API_URL =\n  \"https://opentdb.com/api.php?amount=10&category=18&difficulty=easy&type=multiple\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [curIndex, setCurIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n  const [start, setStart] = useState(false);\n  const [timer, setTimer] = useState(false);\n\n  const startQuiz = () => {\n    setStart(true);\n    setTimer(true);\n  };\n  function refreshPage() {\n    window.location.reload(true);\n  }\n  const Completionist = () => (\n    <div className=\"text-center bigfont text-white\">\n      <span>The quiz is over!</span>\n      <br></br>\n      <span>Your score is {score}</span>\n      <br></br>\n      <button\n        className=\"p-4 font-semibold rounded shadow bg-red-500 container mt-7\"\n        onClick={refreshPage}\n      >\n        Take the Quiz again\n      </button>\n    </div>\n  );\n  const renderer = ({ hours, minutes, seconds, completed }) => {\n    hours = hours < 10 ? \"0\" + hours : hours;\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n    if (completed) {\n      setStart(false);\n      return <Completionist />;\n    } else {\n      return (\n        <div className=\"text-center font\">\n          <span>\n            <span>\n              {hours} : {minutes} : {seconds}\n            </span>\n          </span>\n        </div>\n      );\n    }\n  };\n  useEffect(() => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(data => {\n        const questions = data.results.map(question => ({\n          ...question,\n          answers: [\n            question.correct_answer,\n            ...question.incorrect_answers,\n          ].sort(() => Math.random() - 0.5),\n        }));\n        setQuestions(questions);\n      });\n  }, []);\n  const handleAnswer = answer => {\n    if (!showAnswers) {\n      // Prevent double answers\n      if (answer === questions[curIndex].correct_answer) {\n        setScore(score + 1);\n      }\n    }\n    setShowAnswers(true);\n  };\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n    setCurIndex(curIndex + 1);\n  };\n  return (\n    <div>\n      {!start && !timer ? (\n        <div>\n          <h1 className=\"text-5xl text-white font-bold text-center\">\n            Welcome to QUIZ APP\n          </h1>\n          <br></br>\n          <h2 className=\"text-2xl text-white font-bold text-center\">\n            You have ten seconds for each question\n          </h2>\n          <button\n            className=\"p-4 font-semibold rounded shadow bg-green-500 container mt-7\"\n            onClick={startQuiz}\n          >\n            START QUIZ\n          </button>\n        </div>\n      ) : (\n        <div className=\"questions\">\n          {start ? (\n            <Countdown date={Date.now() + 10000} renderer={renderer} />\n          ) : (\n            <Completionist />\n          )}\n          {questions.length > 0 && start ? (\n            <div className=\"container\">\n              {curIndex >= questions.length ? (\n                <Countdown date={Date.now()} renderer={renderer} />\n              ) : (\n                <React.Fragment>\n                  <QuestionArea\n                    data={questions[curIndex]}\n                    showAnswers={showAnswers}\n                    handleAnswer={handleAnswer}\n                    handleNextQuestion={handleNextQuestion}\n                  />\n                </React.Fragment>\n              )}\n            </div>\n          ) : start ? (\n            <h1 className=\"text-white\">Loading...</h1>\n          ) : (\n            <h1></h1>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}